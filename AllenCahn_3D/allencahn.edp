include "Cube.idp"
load "iovtk"

int nn=20;
int[int] NN=[nn,nn,2*nn];
real [int,int] BB=[[0,1],[0,1],[0,2]];
int [int,int] L=[[1,2],[3,4],[5,6]];

int iter=0;
int cstx=100.25, csty=200/sqrt(2), cstz=300/3.14;
real eps=0.01;
real ddt=0.01, T=1;

func uinit=(cos(cstx*pi*x)+cos(csty*pi*y)+cos(cstz*pi*z))/3;


mesh3 Th=Cube(NN,BB,L);
//medit("Th",Th);

fespace Vh(Th,P1);
Vh u=uinit,v,uold;

problem AllenCahnx(u,v, solver=GMRES)=int2d(Th)(u*v/ddt+(dx(u)*dx(v)))
	+ int2d(Th)(-uold*v/ddt);

problem AllenCahny(u,v, solver=GMRES)=int2d(Th)(u*v/ddt+(dy(u)*dy(v)))
	+ int2d(Th)(-uold*v/ddt);

problem AllenCahnz(u,v, solver=GMRES)=int2d(Th)(u*v/ddt+(dz(u)*dz(v)))
	+ int2d(Th)(-uold*v/ddt);

savevtk("./results_vtk/allencahn"+iter+".vtk",Th,u);

for (real t=0;t<T; t+=ddt){
	iter=iter+1;
	uold=u;
	AllenCahnx;
	uold=u;
	AllenCahny;
	uold=u;
	AllenCahnz;
	uold=u;
	u=uold/sqrt(uold^2+(1-uold^2)*exp(-2*ddt/eps^2));
	savevtk("./results_vtk/allencahn"+iter+".vtk",Th,u);
}
	
